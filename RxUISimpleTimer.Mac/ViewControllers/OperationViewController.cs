// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using ReactiveUI;
using RxUISimpleTimer.Core.ViewModels;
using Splat;
using System.Diagnostics;

namespace RxUISimpleTimer.Mac.ViewControllers
{
    public partial class OperationViewController : NSViewController, IViewFor<OperationViewModel>
    {
        public OperationViewController(IntPtr handle)
            : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            VM = Locator.CurrentMutable.GetService<OperationViewModel>();
            this.OneWayBind(VM, vm => vm.Elapsed, v => v.CurrentValueField.StringValue);
            this.BindCommand(VM, vm => vm.Start, v => v.StartButton);
            this.BindCommand(VM, vm => vm.Stop, v => v.StopButton);
            this.BindCommand(VM, vm => vm.Lap, v => v.LapButton);
        }

        private OperationViewModel VM;

        #region IViewFor implementation

        OperationViewModel IViewFor<OperationViewModel>.ViewModel
        {
            get
            {
                return VM;
            }
            set
            {
                VM = value;
            }
        }

        #endregion

        #region IViewFor implementation

        object IViewFor.ViewModel
        {
            get
            {
                return VM;  
            }
            set
            {
                VM = (OperationViewModel)value;
            }
        }

        #endregion
    }
}
